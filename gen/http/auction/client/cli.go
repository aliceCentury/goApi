// Code generated by goa v3.0.4, DO NOT EDIT.
//
// auction HTTP client CLI support package
//
// Command:
// $ goa gen calcsvc/design

package client

import (
	auction "calcsvc/gen/auction"
	"encoding/json"
	"fmt"
)

// BuildPickPayload builds the payload for the auction pick endpoint from CLI
// flags.
func BuildPickPayload(auctionPickBody string) (*auction.Criteria, error) {
	var err error
	var body PickRequestBody
	{
		err = json.Unmarshal([]byte(auctionPickBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"name\": \"Blue\\'s Cuvee\",\n      \"varietal\": [\n         \"pinot noir\",\n         \"merlot\",\n         \"cabernet franc\"\n      ],\n      \"winery\": \"longoria\"\n   }'")
		}
	}
	v := &auction.Criteria{
		Name:   body.Name,
		Winery: body.Winery,
	}
	if body.Varietal != nil {
		v.Varietal = make([]string, len(body.Varietal))
		for i, val := range body.Varietal {
			v.Varietal[i] = val
		}
	}
	return v, nil
}
