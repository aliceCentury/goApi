// Code generated by goa v3.0.4, DO NOT EDIT.
//
// product gRPC client CLI support package
//
// Command:
// $ goa gen calcsvc/design

package client

import (
	productpb "calcsvc/gen/grpc/product/pb"
	product "calcsvc/gen/product"
	"encoding/json"
	"fmt"
)

// BuildProductEndpointPayload builds the payload for the product product
// endpoint from CLI flags.
func BuildProductEndpointPayload(productProductMessage string) (*product.ProductPayload, error) {
	var err error
	var message productpb.ProductRequest
	{
		if productProductMessage != "" {
			err = json.Unmarshal([]byte(productProductMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, example of valid JSON:\n%s", "'{\n      \"id\": \"Non quis.\"\n   }'")
			}
		}
	}
	v := &product.ProductPayload{
		ID: message.Id,
	}
	return v, nil
}
