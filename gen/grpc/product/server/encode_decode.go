// Code generated by goa v3.0.4, DO NOT EDIT.
//
// product gRPC server encoders and decoders
//
// Command:
// $ goa gen calcsvc/design

package server

import (
	productpb "calcsvc/gen/grpc/product/pb"
	product "calcsvc/gen/product"
	productviews "calcsvc/gen/product/views"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeProductEndpointResponse encodes responses from the "product" service
// "product" endpoint.
func EncodeProductEndpointResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	vres, ok := v.(*productviews.Product)
	if !ok {
		return nil, goagrpc.ErrInvalidType("product", "product", "*productviews.Product", v)
	}
	result := vres.Projected
	(*hdr).Append("goa-view", vres.View)
	resp := NewProductResponse(result)
	return resp, nil
}

// DecodeProductEndpointRequest decodes requests sent to "product" service
// "product" endpoint.
func DecodeProductEndpointRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *productpb.ProductRequest
		ok      bool
	)
	{
		if message, ok = v.(*productpb.ProductRequest); !ok {
			return nil, goagrpc.ErrInvalidType("product", "product", "*productpb.ProductRequest", v)
		}
	}
	var payload *product.ProductPayload
	{
		payload = NewProductPayload(message)
	}
	return payload, nil
}
