// Code generated by protoc-gen-go. DO NOT EDIT.
// source: product.proto

package productpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProductNotFoundError struct {
	// Message of error
	Message_ string `protobuf:"bytes,1,opt,name=message_,json=message,proto3" json:"message_,omitempty"`
	// ID of missing bottle
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductNotFoundError) Reset()         { *m = ProductNotFoundError{} }
func (m *ProductNotFoundError) String() string { return proto.CompactTextString(m) }
func (*ProductNotFoundError) ProtoMessage()    {}
func (*ProductNotFoundError) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{0}
}

func (m *ProductNotFoundError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductNotFoundError.Unmarshal(m, b)
}
func (m *ProductNotFoundError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductNotFoundError.Marshal(b, m, deterministic)
}
func (m *ProductNotFoundError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductNotFoundError.Merge(m, src)
}
func (m *ProductNotFoundError) XXX_Size() int {
	return xxx_messageInfo_ProductNotFoundError.Size(m)
}
func (m *ProductNotFoundError) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductNotFoundError.DiscardUnknown(m)
}

var xxx_messageInfo_ProductNotFoundError proto.InternalMessageInfo

func (m *ProductNotFoundError) GetMessage_() string {
	if m != nil {
		return m.Message_
	}
	return ""
}

func (m *ProductNotFoundError) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ProductRequest struct {
	// auctionId
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{1}
}

func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (m *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(m, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ProductResponse struct {
	// 商品Id
	Id int32 `protobuf:"zigzag32,1,opt,name=id,proto3" json:"id,omitempty"`
	// 编号
	ArtNo                string   `protobuf:"bytes,3,opt,name=art_no,json=artNo,proto3" json:"art_no,omitempty"`
	CarouselList         []*Media `protobuf:"bytes,4,rep,name=carousel_list,json=carouselList,proto3" json:"carousel_list,omitempty"`
	CategoryName         string   `protobuf:"bytes,5,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	CategoryId           int32    `protobuf:"zigzag32,6,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CertCode             int32    `protobuf:"zigzag32,7,opt,name=cert_code,json=certCode,proto3" json:"cert_code,omitempty"`
	CertType             int32    `protobuf:"zigzag32,8,opt,name=cert_type,json=certType,proto3" json:"cert_type,omitempty"`
	Colour               string   `protobuf:"bytes,9,opt,name=colour,proto3" json:"colour,omitempty"`
	ColourId             int32    `protobuf:"zigzag32,11,opt,name=colour_id,json=colourId,proto3" json:"colour_id,omitempty"`
	CreatedAt            int32    `protobuf:"zigzag32,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Crowd                string   `protobuf:"bytes,13,opt,name=crowd,proto3" json:"crowd,omitempty"`
	CurrentPrice         int32    `protobuf:"zigzag32,14,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	EndTime              int32    `protobuf:"zigzag32,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	DetailPics           []*Media `protobuf:"bytes,16,rep,name=detail_pics,json=detailPics,proto3" json:"detail_pics,omitempty"`
	ExtAttrMap           int32    `protobuf:"zigzag32,17,opt,name=ext_attr_map,json=extAttrMap,proto3" json:"ext_attr_map,omitempty"`
	Level                int32    `protobuf:"zigzag32,18,opt,name=level,proto3" json:"level,omitempty"`
	LevelId              int32    `protobuf:"zigzag32,19,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`
	Name                 string   `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	MktPrice             int32    `protobuf:"zigzag32,21,opt,name=mkt_price,json=mktPrice,proto3" json:"mkt_price,omitempty"`
	OperatorId           int32    `protobuf:"zigzag32,22,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Recommendations      string   `protobuf:"bytes,23,opt,name=recommendations,proto3" json:"recommendations,omitempty"`
	Scenario             string   `protobuf:"bytes,24,opt,name=scenario,proto3" json:"scenario,omitempty"`
	ScenarioList         []string `protobuf:"bytes,25,rep,name=scenario_list,json=scenarioList,proto3" json:"scenario_list,omitempty"`
	Size                 string   `protobuf:"bytes,26,opt,name=size,proto3" json:"size,omitempty"`
	Status               int32    `protobuf:"zigzag32,27,opt,name=status,proto3" json:"status,omitempty"`
	Style                string   `protobuf:"bytes,28,opt,name=style,proto3" json:"style,omitempty"`
	StyleId              string   `protobuf:"bytes,29,opt,name=style_id,json=styleId,proto3" json:"style_id,omitempty"`
	Summary              string   `protobuf:"bytes,30,opt,name=summary,proto3" json:"summary,omitempty"`
	TemplateId           int32    `protobuf:"zigzag32,31,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	UpdatedAt            int32    `protobuf:"zigzag32,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version              int32    `protobuf:"zigzag32,33,opt,name=version,proto3" json:"version,omitempty"`
	Weight               string   `protobuf:"bytes,34,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductResponse) Reset()         { *m = ProductResponse{} }
func (m *ProductResponse) String() string { return proto.CompactTextString(m) }
func (*ProductResponse) ProtoMessage()    {}
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{2}
}

func (m *ProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResponse.Unmarshal(m, b)
}
func (m *ProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResponse.Marshal(b, m, deterministic)
}
func (m *ProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResponse.Merge(m, src)
}
func (m *ProductResponse) XXX_Size() int {
	return xxx_messageInfo_ProductResponse.Size(m)
}
func (m *ProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResponse proto.InternalMessageInfo

func (m *ProductResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProductResponse) GetArtNo() string {
	if m != nil {
		return m.ArtNo
	}
	return ""
}

func (m *ProductResponse) GetCarouselList() []*Media {
	if m != nil {
		return m.CarouselList
	}
	return nil
}

func (m *ProductResponse) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *ProductResponse) GetCategoryId() int32 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *ProductResponse) GetCertCode() int32 {
	if m != nil {
		return m.CertCode
	}
	return 0
}

func (m *ProductResponse) GetCertType() int32 {
	if m != nil {
		return m.CertType
	}
	return 0
}

func (m *ProductResponse) GetColour() string {
	if m != nil {
		return m.Colour
	}
	return ""
}

func (m *ProductResponse) GetColourId() int32 {
	if m != nil {
		return m.ColourId
	}
	return 0
}

func (m *ProductResponse) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ProductResponse) GetCrowd() string {
	if m != nil {
		return m.Crowd
	}
	return ""
}

func (m *ProductResponse) GetCurrentPrice() int32 {
	if m != nil {
		return m.CurrentPrice
	}
	return 0
}

func (m *ProductResponse) GetEndTime() int32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ProductResponse) GetDetailPics() []*Media {
	if m != nil {
		return m.DetailPics
	}
	return nil
}

func (m *ProductResponse) GetExtAttrMap() int32 {
	if m != nil {
		return m.ExtAttrMap
	}
	return 0
}

func (m *ProductResponse) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *ProductResponse) GetLevelId() int32 {
	if m != nil {
		return m.LevelId
	}
	return 0
}

func (m *ProductResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductResponse) GetMktPrice() int32 {
	if m != nil {
		return m.MktPrice
	}
	return 0
}

func (m *ProductResponse) GetOperatorId() int32 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *ProductResponse) GetRecommendations() string {
	if m != nil {
		return m.Recommendations
	}
	return ""
}

func (m *ProductResponse) GetScenario() string {
	if m != nil {
		return m.Scenario
	}
	return ""
}

func (m *ProductResponse) GetScenarioList() []string {
	if m != nil {
		return m.ScenarioList
	}
	return nil
}

func (m *ProductResponse) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *ProductResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ProductResponse) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *ProductResponse) GetStyleId() string {
	if m != nil {
		return m.StyleId
	}
	return ""
}

func (m *ProductResponse) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ProductResponse) GetTemplateId() int32 {
	if m != nil {
		return m.TemplateId
	}
	return 0
}

func (m *ProductResponse) GetUpdatedAt() int32 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ProductResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ProductResponse) GetWeight() string {
	if m != nil {
		return m.Weight
	}
	return ""
}

type Media struct {
	// 图片URL
	MediaUrl string `protobuf:"bytes,5,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	// 媒体类型：0-图片，1-视频，2-未知
	MediaType int32 `protobuf:"zigzag32,1,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	// 视频链接
	Content int32 `protobuf:"zigzag32,2,opt,name=content,proto3" json:"content,omitempty"`
	// 上传顺序，默认为0
	Sequence int32 `protobuf:"zigzag32,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Id
	MediaId              int32    `protobuf:"zigzag32,4,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}
func (*Media) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0fd8b59378f44a5, []int{3}
}

func (m *Media) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Media.Unmarshal(m, b)
}
func (m *Media) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Media.Marshal(b, m, deterministic)
}
func (m *Media) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Media.Merge(m, src)
}
func (m *Media) XXX_Size() int {
	return xxx_messageInfo_Media.Size(m)
}
func (m *Media) XXX_DiscardUnknown() {
	xxx_messageInfo_Media.DiscardUnknown(m)
}

var xxx_messageInfo_Media proto.InternalMessageInfo

func (m *Media) GetMediaUrl() string {
	if m != nil {
		return m.MediaUrl
	}
	return ""
}

func (m *Media) GetMediaType() int32 {
	if m != nil {
		return m.MediaType
	}
	return 0
}

func (m *Media) GetContent() int32 {
	if m != nil {
		return m.Content
	}
	return 0
}

func (m *Media) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Media) GetMediaId() int32 {
	if m != nil {
		return m.MediaId
	}
	return 0
}

func init() {
	proto.RegisterType((*ProductNotFoundError)(nil), "product.ProductNotFoundError")
	proto.RegisterType((*ProductRequest)(nil), "product.ProductRequest")
	proto.RegisterType((*ProductResponse)(nil), "product.ProductResponse")
	proto.RegisterType((*Media)(nil), "product.Media")
}

func init() { proto.RegisterFile("product.proto", fileDescriptor_f0fd8b59378f44a5) }

var fileDescriptor_f0fd8b59378f44a5 = []byte{
	// 704 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x54, 0xdb, 0x4e, 0x33, 0x37,
	0x10, 0x56, 0x20, 0xc9, 0x26, 0x4e, 0x08, 0x8d, 0xcb, 0xc1, 0x40, 0x29, 0x69, 0x7a, 0xc3, 0x15,
	0x95, 0xe0, 0x09, 0xd2, 0x96, 0x4a, 0x91, 0x0a, 0x45, 0x11, 0xbd, 0xe9, 0xcd, 0xca, 0xac, 0x47,
	0xd4, 0x62, 0xd7, 0xde, 0xda, 0xb3, 0x40, 0xfa, 0x1c, 0x7d, 0xa1, 0xbe, 0x59, 0xe5, 0xb1, 0x77,
	0xfb, 0x9f, 0xee, 0xe6, 0xfb, 0x66, 0xc6, 0x9e, 0x33, 0xdb, 0xab, 0x9d, 0x55, 0x4d, 0x81, 0x57,
	0xb5, 0xb3, 0x68, 0x79, 0x96, 0xe0, 0x72, 0xc5, 0x0e, 0x1e, 0xa2, 0x78, 0x6f, 0xf1, 0x17, 0xdb,
	0x18, 0x75, 0xeb, 0x9c, 0x75, 0xfc, 0x84, 0x8d, 0x2a, 0xf0, 0x5e, 0x3e, 0x43, 0x2e, 0x7a, 0x8b,
	0xde, 0xe5, 0x78, 0x93, 0x25, 0xcc, 0x67, 0x6c, 0x47, 0x2b, 0xb1, 0x43, 0xe4, 0x8e, 0x56, 0xcb,
	0x05, 0x9b, 0xa5, 0x27, 0x36, 0xf0, 0x57, 0x03, 0x1e, 0x93, 0x45, 0xaf, 0xb3, 0xf8, 0x37, 0x63,
	0xfb, 0x9d, 0x89, 0xaf, 0xad, 0xf1, 0xf0, 0x81, 0xcd, 0x3c, 0xd8, 0xf0, 0x43, 0x36, 0x94, 0x0e,
	0x73, 0x63, 0xc5, 0x2e, 0xf9, 0x0d, 0xa4, 0xc3, 0x7b, 0xcb, 0x6f, 0xd8, 0x5e, 0x21, 0x9d, 0x6d,
	0x3c, 0x94, 0x79, 0xa9, 0x3d, 0x8a, 0xfe, 0x62, 0xf7, 0x72, 0x72, 0x3d, 0xbb, 0x6a, 0xf3, 0xb9,
	0x03, 0xa5, 0xe5, 0x66, 0xda, 0x1a, 0xfd, 0xaa, 0x3d, 0xf2, 0xef, 0x83, 0x13, 0xc2, 0xb3, 0x75,
	0xdb, 0xdc, 0xc8, 0x0a, 0xc4, 0x80, 0x9e, 0x9c, 0xb6, 0xe4, 0xbd, 0xac, 0x80, 0x5f, 0xb0, 0x49,
	0x67, 0xa4, 0x95, 0x18, 0x52, 0x24, 0xac, 0xa5, 0xd6, 0x8a, 0x9f, 0xb1, 0x71, 0x01, 0x0e, 0xf3,
	0xc2, 0x2a, 0x10, 0x19, 0xa9, 0x47, 0x81, 0xf8, 0xc9, 0x2a, 0xe8, 0x94, 0xb8, 0xad, 0x41, 0x8c,
	0xfe, 0x57, 0x3e, 0x6e, 0x6b, 0xe0, 0x47, 0x6c, 0x58, 0xd8, 0xd2, 0x36, 0x4e, 0x8c, 0xe9, 0xe3,
	0x84, 0xc8, 0x89, 0xa4, 0xf0, 0xe1, 0x24, 0x39, 0x11, 0xb1, 0x56, 0xfc, 0x9c, 0xb1, 0xc2, 0x81,
	0x44, 0x50, 0xb9, 0x44, 0x31, 0x25, 0xed, 0x38, 0x31, 0x2b, 0xe4, 0x07, 0x6c, 0x50, 0x38, 0xfb,
	0xa6, 0xc4, 0x5e, 0x2c, 0x0f, 0x01, 0xca, 0xb4, 0x71, 0x0e, 0x0c, 0xe6, 0xb5, 0xd3, 0x05, 0x88,
	0x19, 0xf9, 0x4d, 0x13, 0xf9, 0x10, 0xb8, 0xd0, 0x4b, 0x30, 0x2a, 0x47, 0x5d, 0x81, 0xd8, 0x27,
	0x7d, 0x06, 0x46, 0x3d, 0xea, 0x0a, 0xf8, 0x0f, 0x6c, 0xa2, 0x00, 0xa5, 0x2e, 0xf3, 0x5a, 0x17,
	0x5e, 0x7c, 0xf5, 0xc5, 0xe2, 0xb2, 0x68, 0xf2, 0xa0, 0x0b, 0xcf, 0x17, 0x6c, 0x0a, 0xef, 0x98,
	0x4b, 0x44, 0x97, 0x57, 0xb2, 0x16, 0xf3, 0x58, 0x36, 0x78, 0xc7, 0x15, 0xa2, 0xbb, 0x93, 0x75,
	0x08, 0xb4, 0x84, 0x57, 0x28, 0x05, 0x27, 0x55, 0x04, 0x21, 0x06, 0x12, 0x42, 0xe6, 0x5f, 0xc7,
	0x18, 0x08, 0xaf, 0x15, 0xe7, 0xac, 0x4f, 0x4d, 0x3a, 0xa0, 0xc4, 0x48, 0x0e, 0x95, 0xaa, 0x5e,
	0xda, 0x9c, 0x0e, 0x63, 0xa5, 0xaa, 0x97, 0x94, 0xcf, 0x05, 0x9b, 0xd8, 0x1a, 0x9c, 0x44, 0x4b,
	0x85, 0x3c, 0x8a, 0x21, 0xb4, 0xd4, 0x5a, 0xf1, 0x4b, 0xb6, 0xef, 0xa0, 0xb0, 0x55, 0x05, 0x46,
	0x49, 0xd4, 0xd6, 0x78, 0x71, 0x4c, 0x8f, 0x7f, 0x4a, 0xf3, 0x53, 0x36, 0xf2, 0x05, 0x18, 0xe9,
	0xb4, 0x15, 0x82, 0x4c, 0x3a, 0x1c, 0x6a, 0xdb, 0xca, 0x71, 0xf4, 0x4e, 0x16, 0xbb, 0x61, 0x8a,
	0x5a, 0x92, 0x46, 0x8d, 0xb3, 0xbe, 0xd7, 0x7f, 0x83, 0x38, 0x8d, 0xc1, 0x07, 0x39, 0xb4, 0xdf,
	0xa3, 0xc4, 0xc6, 0x8b, 0x33, 0x0a, 0x2d, 0xa1, 0x50, 0x19, 0x8f, 0xdb, 0x12, 0xc4, 0x37, 0xb1,
	0x85, 0x04, 0x42, 0x65, 0x48, 0x08, 0xa9, 0x9c, 0xc7, 0x4d, 0x23, 0xbc, 0x56, 0x5c, 0xb0, 0xcc,
	0x37, 0x55, 0x25, 0xdd, 0x56, 0x7c, 0x9b, 0x34, 0x11, 0x86, 0x12, 0x20, 0x54, 0x75, 0x29, 0x91,
	0xfc, 0x2e, 0x62, 0x09, 0x5a, 0x2a, 0x4e, 0x53, 0x53, 0xab, 0x76, 0x9a, 0x16, 0x71, 0x9a, 0x12,
	0xb3, 0xc2, 0xf0, 0xf2, 0x2b, 0x38, 0xaf, 0xad, 0x11, 0xdf, 0xc5, 0x6e, 0x24, 0x18, 0x82, 0x7f,
	0x03, 0xfd, 0xfc, 0x27, 0x8a, 0x65, 0x9c, 0xdd, 0x88, 0x96, 0xff, 0xf4, 0xd8, 0x80, 0xc6, 0x81,
	0x7a, 0x13, 0x84, 0xbc, 0x71, 0x65, 0xda, 0xac, 0x11, 0x11, 0xbf, 0xbb, 0x32, 0xfc, 0x1b, 0x95,
	0xb4, 0x18, 0x71, 0xbd, 0xa3, 0x39, 0x6d, 0x86, 0x60, 0x59, 0x61, 0x0d, 0x82, 0x41, 0x3a, 0x20,
	0xf3, 0x4d, 0x0b, 0xa9, 0x13, 0xe1, 0x7c, 0x98, 0x02, 0xe8, 0x02, 0xcc, 0x37, 0x1d, 0x8e, 0xc7,
	0x28, 0x3c, 0xaa, 0x95, 0xe8, 0x47, 0x37, 0xc2, 0x6b, 0x75, 0xfd, 0x1b, 0xcb, 0xd2, 0x65, 0xe1,
	0x3f, 0x77, 0x47, 0xe6, 0xd6, 0xa8, 0xda, 0x6a, 0x83, 0xfc, 0xb8, 0x9b, 0xe4, 0x8f, 0x2f, 0xd4,
	0xa9, 0xf8, 0x5c, 0x11, 0xef, 0xd2, 0x8f, 0x93, 0x3f, 0xc6, 0x49, 0x55, 0x3f, 0x3d, 0x0d, 0xe9,
	0x5a, 0xde, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xcb, 0xac, 0x5a, 0x3e, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductClient is the client API for Product service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductClient interface {
	// 商品信息
	ProductEndpoint(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error)
}

type productClient struct {
	cc *grpc.ClientConn
}

func NewProductClient(cc *grpc.ClientConn) ProductClient {
	return &productClient{cc}
}

func (c *productClient) ProductEndpoint(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := c.cc.Invoke(ctx, "/product.Product/ProductEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServer is the server API for Product service.
type ProductServer interface {
	// 商品信息
	ProductEndpoint(context.Context, *ProductRequest) (*ProductResponse, error)
}

// UnimplementedProductServer can be embedded to have forward compatible implementations.
type UnimplementedProductServer struct {
}

func (*UnimplementedProductServer) ProductEndpoint(ctx context.Context, req *ProductRequest) (*ProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProductEndpoint not implemented")
}

func RegisterProductServer(s *grpc.Server, srv ProductServer) {
	s.RegisterService(&_Product_serviceDesc, srv)
}

func _Product_ProductEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).ProductEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/ProductEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).ProductEndpoint(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Product_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product.Product",
	HandlerType: (*ProductServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProductEndpoint",
			Handler:    _Product_ProductEndpoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product.proto",
}
