// Code generated by goa v3.0.4, DO NOT EDIT.
//
// auction gRPC server
//
// Command:
// $ goa gen calcsvc/design

package server

import (
	auction "calcsvc/gen/auction"
	auctionpb "calcsvc/gen/grpc/auction/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the auctionpb.AuctionServer interface.
type Server struct {
	GetAuctionProductListByStatusH goagrpc.UnaryHandler
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the auction service endpoints.
func New(e *auction.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		GetAuctionProductListByStatusH: NewGetAuctionProductListByStatusHandler(e.GetAuctionProductListByStatus, uh),
	}
}

// NewGetAuctionProductListByStatusHandler creates a gRPC handler which serves
// the "auction" service "getAuctionProductListByStatus" endpoint.
func NewGetAuctionProductListByStatusHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeGetAuctionProductListByStatusRequest, EncodeGetAuctionProductListByStatusResponse)
	}
	return h
}

// GetAuctionProductListByStatus implements the "GetAuctionProductListByStatus"
// method in auctionpb.AuctionServer interface.
func (s *Server) GetAuctionProductListByStatus(ctx context.Context, message *auctionpb.GetAuctionProductListByStatusRequest) (*auctionpb.AuctionProductCollection, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "getAuctionProductListByStatus")
	ctx = context.WithValue(ctx, goa.ServiceKey, "auction")
	resp, err := s.GetAuctionProductListByStatusH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*auctionpb.AuctionProductCollection), nil
}
