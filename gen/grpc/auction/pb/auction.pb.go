// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auction.proto

package auctionpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAuctionProductListByStatusRequest struct {
	// 拍卖状态 1:历史 2:正在进行 3:即将开始
	AuctionStatus int32 `protobuf:"zigzag32,1,opt,name=auction_status,json=auctionStatus,proto3" json:"auction_status,omitempty"`
	// 当前页数
	CurrentPage int32 `protobuf:"zigzag32,2,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	// 每页返回的条数
	PageSize             int32    `protobuf:"zigzag32,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuctionProductListByStatusRequest) Reset()         { *m = GetAuctionProductListByStatusRequest{} }
func (m *GetAuctionProductListByStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuctionProductListByStatusRequest) ProtoMessage()    {}
func (*GetAuctionProductListByStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_622f477c3a3f2896, []int{0}
}

func (m *GetAuctionProductListByStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuctionProductListByStatusRequest.Unmarshal(m, b)
}
func (m *GetAuctionProductListByStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuctionProductListByStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetAuctionProductListByStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuctionProductListByStatusRequest.Merge(m, src)
}
func (m *GetAuctionProductListByStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuctionProductListByStatusRequest.Size(m)
}
func (m *GetAuctionProductListByStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuctionProductListByStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuctionProductListByStatusRequest proto.InternalMessageInfo

func (m *GetAuctionProductListByStatusRequest) GetAuctionStatus() int32 {
	if m != nil {
		return m.AuctionStatus
	}
	return 0
}

func (m *GetAuctionProductListByStatusRequest) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *GetAuctionProductListByStatusRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type AuctionProductCollection struct {
	Field                []*AuctionProduct `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AuctionProductCollection) Reset()         { *m = AuctionProductCollection{} }
func (m *AuctionProductCollection) String() string { return proto.CompactTextString(m) }
func (*AuctionProductCollection) ProtoMessage()    {}
func (*AuctionProductCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_622f477c3a3f2896, []int{1}
}

func (m *AuctionProductCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuctionProductCollection.Unmarshal(m, b)
}
func (m *AuctionProductCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuctionProductCollection.Marshal(b, m, deterministic)
}
func (m *AuctionProductCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuctionProductCollection.Merge(m, src)
}
func (m *AuctionProductCollection) XXX_Size() int {
	return xxx_messageInfo_AuctionProductCollection.Size(m)
}
func (m *AuctionProductCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_AuctionProductCollection.DiscardUnknown(m)
}

var xxx_messageInfo_AuctionProductCollection proto.InternalMessageInfo

func (m *AuctionProductCollection) GetField() []*AuctionProduct {
	if m != nil {
		return m.Field
	}
	return nil
}

// 拍卖、投标列表.
type AuctionProduct struct {
	// Id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 加价幅度
	AddPrice int32 `protobuf:"zigzag32,2,opt,name=add_price,json=addPrice,proto3" json:"add_price,omitempty"`
	// 货号
	ArtNo string `protobuf:"bytes,3,opt,name=art_no,json=artNo,proto3" json:"art_no,omitempty"`
	// 拍卖结果:  0:成功 1:流拍 2:取当前订单状态   （成功竞得，待用户确认） 3:弃拍
	AuctionStatus int32 `protobuf:"zigzag32,4,opt,name=auction_status,json=auctionStatus,proto3" json:"auction_status,omitempty"`
	// 拍卖类型：0，新手拍(不可加入）；1，直拍(包括0元拍，直接拍,但不可以加入众筹）；2众筹拍（可以加入拍卖众筹）；3，投标拍（特殊的拍卖，可以加入投标众筹）；
	AuctionType int32 `protobuf:"zigzag32,5,opt,name=auction_type,json=auctionType,proto3" json:"auction_type,omitempty"`
	// 所属投标场Id
	BidSceneId int32 `protobuf:"zigzag32,6,opt,name=bid_scene_id,json=bidSceneId,proto3" json:"bid_scene_id,omitempty"`
	// 保证金
	BondPrice int32 `protobuf:"zigzag32,7,opt,name=bond_price,json=bondPrice,proto3" json:"bond_price,omitempty"`
	// 购买数量
	BuyNumber int32 `protobuf:"zigzag32,8,opt,name=buy_number,json=buyNumber,proto3" json:"buy_number,omitempty"`
	// 用户购买的单价
	BuyUnitPrice string `protobuf:"bytes,9,opt,name=buy_unit_price,json=buyUnitPrice,proto3" json:"buy_unit_price,omitempty"`
	// 买断价格
	BuyoutPrice int32 `protobuf:"zigzag32,11,opt,name=buyout_price,json=buyoutPrice,proto3" json:"buyout_price,omitempty"`
	// 封顶价
	CapPrice int32 `protobuf:"zigzag32,12,opt,name=cap_price,json=capPrice,proto3" json:"cap_price,omitempty"`
	// 所属众筹包ID
	CrowdfundingPackageId string `protobuf:"bytes,13,opt,name=crowdfunding_package_id,json=crowdfundingPackageId,proto3" json:"crowdfunding_package_id,omitempty"`
	// 当前价
	CurrentPrice int32  `protobuf:"zigzag32,14,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	EndTime      int64  `protobuf:"zigzag64,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	HeadPortrait string `protobuf:"bytes,16,opt,name=head_portrait,json=headPortrait,proto3" json:"head_portrait,omitempty"`
	// 拍卖前有没有代理 0：没有 1：有
	IsHaveProxy int32 `protobuf:"zigzag32,17,opt,name=is_have_proxy,json=isHaveProxy,proto3" json:"is_have_proxy,omitempty"`
	// 1:有保留价 2:无保留价
	IsReservePrice int32 `protobuf:"zigzag32,18,opt,name=is_reserve_price,json=isReservePrice,proto3" json:"is_reserve_price,omitempty"`
	LastTime       int64 `protobuf:"zigzag64,19,opt,name=last_time,json=lastTime,proto3" json:"last_time,omitempty"`
	// 每人限购
	LimitNumber int32 `protobuf:"zigzag32,20,opt,name=limit_number,json=limitNumber,proto3" json:"limit_number,omitempty"`
	// 市场价
	MktPrice int32 `protobuf:"zigzag32,21,opt,name=mkt_price,json=mktPrice,proto3" json:"mkt_price,omitempty"`
	// 拍卖商品相关图片
	PicturesUrl string `protobuf:"bytes,22,opt,name=pictures_url,json=picturesUrl,proto3" json:"pictures_url,omitempty"`
	// 商品ID
	ProdId int32 `protobuf:"zigzag32,23,opt,name=prod_id,json=prodId,proto3" json:"prod_id,omitempty"`
	// 商品名称
	ProdName string `protobuf:"bytes,24,opt,name=prod_name,json=prodName,proto3" json:"prod_name,omitempty"`
	// 分享二维码
	QrUrl string `protobuf:"bytes,25,opt,name=qr_url,json=qrUrl,proto3" json:"qr_url,omitempty"`
	// 提醒时间
	RemindTime   int64  `protobuf:"zigzag64,26,opt,name=remind_time,json=remindTime,proto3" json:"remind_time,omitempty"`
	ReservePrice string `protobuf:"bytes,27,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	// 保留价
	ResultStatus int32 `protobuf:"zigzag32,28,opt,name=result_status,json=resultStatus,proto3" json:"result_status,omitempty"`
	// 似乎没用到
	RuleId int32 `protobuf:"zigzag32,29,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	// 拍卖编号
	SerialNum string `protobuf:"bytes,30,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	// 分享图片链接
	ShareUrl string `protobuf:"bytes,31,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	// 起拍价
	StartAuctionPrice int32 `protobuf:"zigzag32,32,opt,name=start_auction_price,json=startAuctionPrice,proto3" json:"start_auction_price,omitempty"`
	StartTime         int64 `protobuf:"zigzag64,33,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 拍卖场名称
	Title string `protobuf:"bytes,34,opt,name=title,proto3" json:"title,omitempty"`
	// 总个数
	TotalNumber int32 `protobuf:"zigzag32,35,opt,name=total_number,json=totalNumber,proto3" json:"total_number,omitempty"`
	// 成交数量
	TransactionNumber int32 `protobuf:"zigzag32,36,opt,name=transaction_number,json=transactionNumber,proto3" json:"transaction_number,omitempty"`
	// 成交总额
	TransactionPrice     string   `protobuf:"bytes,37,opt,name=transaction_price,json=transactionPrice,proto3" json:"transaction_price,omitempty"`
	UserId               string   `protobuf:"bytes,38,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,39,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuctionProduct) Reset()         { *m = AuctionProduct{} }
func (m *AuctionProduct) String() string { return proto.CompactTextString(m) }
func (*AuctionProduct) ProtoMessage()    {}
func (*AuctionProduct) Descriptor() ([]byte, []int) {
	return fileDescriptor_622f477c3a3f2896, []int{2}
}

func (m *AuctionProduct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuctionProduct.Unmarshal(m, b)
}
func (m *AuctionProduct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuctionProduct.Marshal(b, m, deterministic)
}
func (m *AuctionProduct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuctionProduct.Merge(m, src)
}
func (m *AuctionProduct) XXX_Size() int {
	return xxx_messageInfo_AuctionProduct.Size(m)
}
func (m *AuctionProduct) XXX_DiscardUnknown() {
	xxx_messageInfo_AuctionProduct.DiscardUnknown(m)
}

var xxx_messageInfo_AuctionProduct proto.InternalMessageInfo

func (m *AuctionProduct) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AuctionProduct) GetAddPrice() int32 {
	if m != nil {
		return m.AddPrice
	}
	return 0
}

func (m *AuctionProduct) GetArtNo() string {
	if m != nil {
		return m.ArtNo
	}
	return ""
}

func (m *AuctionProduct) GetAuctionStatus() int32 {
	if m != nil {
		return m.AuctionStatus
	}
	return 0
}

func (m *AuctionProduct) GetAuctionType() int32 {
	if m != nil {
		return m.AuctionType
	}
	return 0
}

func (m *AuctionProduct) GetBidSceneId() int32 {
	if m != nil {
		return m.BidSceneId
	}
	return 0
}

func (m *AuctionProduct) GetBondPrice() int32 {
	if m != nil {
		return m.BondPrice
	}
	return 0
}

func (m *AuctionProduct) GetBuyNumber() int32 {
	if m != nil {
		return m.BuyNumber
	}
	return 0
}

func (m *AuctionProduct) GetBuyUnitPrice() string {
	if m != nil {
		return m.BuyUnitPrice
	}
	return ""
}

func (m *AuctionProduct) GetBuyoutPrice() int32 {
	if m != nil {
		return m.BuyoutPrice
	}
	return 0
}

func (m *AuctionProduct) GetCapPrice() int32 {
	if m != nil {
		return m.CapPrice
	}
	return 0
}

func (m *AuctionProduct) GetCrowdfundingPackageId() string {
	if m != nil {
		return m.CrowdfundingPackageId
	}
	return ""
}

func (m *AuctionProduct) GetCurrentPrice() int32 {
	if m != nil {
		return m.CurrentPrice
	}
	return 0
}

func (m *AuctionProduct) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *AuctionProduct) GetHeadPortrait() string {
	if m != nil {
		return m.HeadPortrait
	}
	return ""
}

func (m *AuctionProduct) GetIsHaveProxy() int32 {
	if m != nil {
		return m.IsHaveProxy
	}
	return 0
}

func (m *AuctionProduct) GetIsReservePrice() int32 {
	if m != nil {
		return m.IsReservePrice
	}
	return 0
}

func (m *AuctionProduct) GetLastTime() int64 {
	if m != nil {
		return m.LastTime
	}
	return 0
}

func (m *AuctionProduct) GetLimitNumber() int32 {
	if m != nil {
		return m.LimitNumber
	}
	return 0
}

func (m *AuctionProduct) GetMktPrice() int32 {
	if m != nil {
		return m.MktPrice
	}
	return 0
}

func (m *AuctionProduct) GetPicturesUrl() string {
	if m != nil {
		return m.PicturesUrl
	}
	return ""
}

func (m *AuctionProduct) GetProdId() int32 {
	if m != nil {
		return m.ProdId
	}
	return 0
}

func (m *AuctionProduct) GetProdName() string {
	if m != nil {
		return m.ProdName
	}
	return ""
}

func (m *AuctionProduct) GetQrUrl() string {
	if m != nil {
		return m.QrUrl
	}
	return ""
}

func (m *AuctionProduct) GetRemindTime() int64 {
	if m != nil {
		return m.RemindTime
	}
	return 0
}

func (m *AuctionProduct) GetReservePrice() string {
	if m != nil {
		return m.ReservePrice
	}
	return ""
}

func (m *AuctionProduct) GetResultStatus() int32 {
	if m != nil {
		return m.ResultStatus
	}
	return 0
}

func (m *AuctionProduct) GetRuleId() int32 {
	if m != nil {
		return m.RuleId
	}
	return 0
}

func (m *AuctionProduct) GetSerialNum() string {
	if m != nil {
		return m.SerialNum
	}
	return ""
}

func (m *AuctionProduct) GetShareUrl() string {
	if m != nil {
		return m.ShareUrl
	}
	return ""
}

func (m *AuctionProduct) GetStartAuctionPrice() int32 {
	if m != nil {
		return m.StartAuctionPrice
	}
	return 0
}

func (m *AuctionProduct) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *AuctionProduct) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AuctionProduct) GetTotalNumber() int32 {
	if m != nil {
		return m.TotalNumber
	}
	return 0
}

func (m *AuctionProduct) GetTransactionNumber() int32 {
	if m != nil {
		return m.TransactionNumber
	}
	return 0
}

func (m *AuctionProduct) GetTransactionPrice() string {
	if m != nil {
		return m.TransactionPrice
	}
	return ""
}

func (m *AuctionProduct) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AuctionProduct) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type GetAuctionProductDetailNotFoundError struct {
	// Message of error
	Message_ string `protobuf:"bytes,1,opt,name=message_,json=message,proto3" json:"message_,omitempty"`
	// ID of missing bottle
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuctionProductDetailNotFoundError) Reset()         { *m = GetAuctionProductDetailNotFoundError{} }
func (m *GetAuctionProductDetailNotFoundError) String() string { return proto.CompactTextString(m) }
func (*GetAuctionProductDetailNotFoundError) ProtoMessage()    {}
func (*GetAuctionProductDetailNotFoundError) Descriptor() ([]byte, []int) {
	return fileDescriptor_622f477c3a3f2896, []int{3}
}

func (m *GetAuctionProductDetailNotFoundError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuctionProductDetailNotFoundError.Unmarshal(m, b)
}
func (m *GetAuctionProductDetailNotFoundError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuctionProductDetailNotFoundError.Marshal(b, m, deterministic)
}
func (m *GetAuctionProductDetailNotFoundError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuctionProductDetailNotFoundError.Merge(m, src)
}
func (m *GetAuctionProductDetailNotFoundError) XXX_Size() int {
	return xxx_messageInfo_GetAuctionProductDetailNotFoundError.Size(m)
}
func (m *GetAuctionProductDetailNotFoundError) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuctionProductDetailNotFoundError.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuctionProductDetailNotFoundError proto.InternalMessageInfo

func (m *GetAuctionProductDetailNotFoundError) GetMessage_() string {
	if m != nil {
		return m.Message_
	}
	return ""
}

func (m *GetAuctionProductDetailNotFoundError) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAuctionProductDetailRequest struct {
	// auctionId
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuctionProductDetailRequest) Reset()         { *m = GetAuctionProductDetailRequest{} }
func (m *GetAuctionProductDetailRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuctionProductDetailRequest) ProtoMessage()    {}
func (*GetAuctionProductDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_622f477c3a3f2896, []int{4}
}

func (m *GetAuctionProductDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuctionProductDetailRequest.Unmarshal(m, b)
}
func (m *GetAuctionProductDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuctionProductDetailRequest.Marshal(b, m, deterministic)
}
func (m *GetAuctionProductDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuctionProductDetailRequest.Merge(m, src)
}
func (m *GetAuctionProductDetailRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuctionProductDetailRequest.Size(m)
}
func (m *GetAuctionProductDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuctionProductDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuctionProductDetailRequest proto.InternalMessageInfo

func (m *GetAuctionProductDetailRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAuctionProductDetailResponse struct {
	// Id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 加价幅度
	AddPrice int32 `protobuf:"zigzag32,2,opt,name=add_price,json=addPrice,proto3" json:"add_price,omitempty"`
	// 货号
	ArtNo string `protobuf:"bytes,3,opt,name=art_no,json=artNo,proto3" json:"art_no,omitempty"`
	// 拍卖结果:  0:成功 1:流拍 2:取当前订单状态   （成功竞得，待用户确认） 3:弃拍
	AuctionStatus int32 `protobuf:"zigzag32,4,opt,name=auction_status,json=auctionStatus,proto3" json:"auction_status,omitempty"`
	// 拍卖类型：0，新手拍(不可加入）；1，直拍(包括0元拍，直接拍,但不可以加入众筹）；2众筹拍（可以加入拍卖众筹）；3，投标拍（特殊的拍卖，可以加入投标众筹）；
	AuctionType int32 `protobuf:"zigzag32,5,opt,name=auction_type,json=auctionType,proto3" json:"auction_type,omitempty"`
	// 所属投标场Id
	BidSceneId int32 `protobuf:"zigzag32,6,opt,name=bid_scene_id,json=bidSceneId,proto3" json:"bid_scene_id,omitempty"`
	// 保证金
	BondPrice int32 `protobuf:"zigzag32,7,opt,name=bond_price,json=bondPrice,proto3" json:"bond_price,omitempty"`
	// 购买数量
	BuyNumber int32 `protobuf:"zigzag32,8,opt,name=buy_number,json=buyNumber,proto3" json:"buy_number,omitempty"`
	// 用户购买的单价
	BuyUnitPrice string `protobuf:"bytes,9,opt,name=buy_unit_price,json=buyUnitPrice,proto3" json:"buy_unit_price,omitempty"`
	// 买断价格
	BuyoutPrice int32 `protobuf:"zigzag32,11,opt,name=buyout_price,json=buyoutPrice,proto3" json:"buyout_price,omitempty"`
	// 封顶价
	CapPrice int32 `protobuf:"zigzag32,12,opt,name=cap_price,json=capPrice,proto3" json:"cap_price,omitempty"`
	// 所属众筹包ID
	CrowdfundingPackageId string `protobuf:"bytes,13,opt,name=crowdfunding_package_id,json=crowdfundingPackageId,proto3" json:"crowdfunding_package_id,omitempty"`
	// 当前价
	CurrentPrice int32  `protobuf:"zigzag32,14,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	EndTime      int64  `protobuf:"zigzag64,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	HeadPortrait string `protobuf:"bytes,16,opt,name=head_portrait,json=headPortrait,proto3" json:"head_portrait,omitempty"`
	// 拍卖前有没有代理 0：没有 1：有
	IsHaveProxy int32 `protobuf:"zigzag32,17,opt,name=is_have_proxy,json=isHaveProxy,proto3" json:"is_have_proxy,omitempty"`
	// 1:有保留价 2:无保留价
	IsReservePrice int32 `protobuf:"zigzag32,18,opt,name=is_reserve_price,json=isReservePrice,proto3" json:"is_reserve_price,omitempty"`
	LastTime       int64 `protobuf:"zigzag64,19,opt,name=last_time,json=lastTime,proto3" json:"last_time,omitempty"`
	// 每人限购
	LimitNumber int32 `protobuf:"zigzag32,20,opt,name=limit_number,json=limitNumber,proto3" json:"limit_number,omitempty"`
	// 市场价
	MktPrice int32 `protobuf:"zigzag32,21,opt,name=mkt_price,json=mktPrice,proto3" json:"mkt_price,omitempty"`
	// 拍卖商品相关图片
	PicturesUrl string `protobuf:"bytes,22,opt,name=pictures_url,json=picturesUrl,proto3" json:"pictures_url,omitempty"`
	// 商品ID
	ProdId int32 `protobuf:"zigzag32,23,opt,name=prod_id,json=prodId,proto3" json:"prod_id,omitempty"`
	// 商品名称
	ProdName string `protobuf:"bytes,24,opt,name=prod_name,json=prodName,proto3" json:"prod_name,omitempty"`
	// 分享二维码
	QrUrl string `protobuf:"bytes,25,opt,name=qr_url,json=qrUrl,proto3" json:"qr_url,omitempty"`
	// 提醒时间
	RemindTime   int64  `protobuf:"zigzag64,26,opt,name=remind_time,json=remindTime,proto3" json:"remind_time,omitempty"`
	ReservePrice string `protobuf:"bytes,27,opt,name=reserve_price,json=reservePrice,proto3" json:"reserve_price,omitempty"`
	// 保留价
	ResultStatus int32 `protobuf:"zigzag32,28,opt,name=result_status,json=resultStatus,proto3" json:"result_status,omitempty"`
	// 似乎没用到
	RuleId int32 `protobuf:"zigzag32,29,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	// 拍卖编号
	SerialNum string `protobuf:"bytes,30,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	// 分享图片链接
	ShareUrl string `protobuf:"bytes,31,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	// 起拍价
	StartAuctionPrice int32 `protobuf:"zigzag32,32,opt,name=start_auction_price,json=startAuctionPrice,proto3" json:"start_auction_price,omitempty"`
	StartTime         int64 `protobuf:"zigzag64,33,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 拍卖场名称
	Title string `protobuf:"bytes,34,opt,name=title,proto3" json:"title,omitempty"`
	// 总个数
	TotalNumber int32 `protobuf:"zigzag32,35,opt,name=total_number,json=totalNumber,proto3" json:"total_number,omitempty"`
	// 成交数量
	TransactionNumber int32 `protobuf:"zigzag32,36,opt,name=transaction_number,json=transactionNumber,proto3" json:"transaction_number,omitempty"`
	// 成交总额
	TransactionPrice     string   `protobuf:"bytes,37,opt,name=transaction_price,json=transactionPrice,proto3" json:"transaction_price,omitempty"`
	UserId               string   `protobuf:"bytes,38,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,39,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuctionProductDetailResponse) Reset()         { *m = GetAuctionProductDetailResponse{} }
func (m *GetAuctionProductDetailResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuctionProductDetailResponse) ProtoMessage()    {}
func (*GetAuctionProductDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_622f477c3a3f2896, []int{5}
}

func (m *GetAuctionProductDetailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuctionProductDetailResponse.Unmarshal(m, b)
}
func (m *GetAuctionProductDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuctionProductDetailResponse.Marshal(b, m, deterministic)
}
func (m *GetAuctionProductDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuctionProductDetailResponse.Merge(m, src)
}
func (m *GetAuctionProductDetailResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuctionProductDetailResponse.Size(m)
}
func (m *GetAuctionProductDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuctionProductDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuctionProductDetailResponse proto.InternalMessageInfo

func (m *GetAuctionProductDetailResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetAddPrice() int32 {
	if m != nil {
		return m.AddPrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetArtNo() string {
	if m != nil {
		return m.ArtNo
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetAuctionStatus() int32 {
	if m != nil {
		return m.AuctionStatus
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetAuctionType() int32 {
	if m != nil {
		return m.AuctionType
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetBidSceneId() int32 {
	if m != nil {
		return m.BidSceneId
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetBondPrice() int32 {
	if m != nil {
		return m.BondPrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetBuyNumber() int32 {
	if m != nil {
		return m.BuyNumber
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetBuyUnitPrice() string {
	if m != nil {
		return m.BuyUnitPrice
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetBuyoutPrice() int32 {
	if m != nil {
		return m.BuyoutPrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetCapPrice() int32 {
	if m != nil {
		return m.CapPrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetCrowdfundingPackageId() string {
	if m != nil {
		return m.CrowdfundingPackageId
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetCurrentPrice() int32 {
	if m != nil {
		return m.CurrentPrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetHeadPortrait() string {
	if m != nil {
		return m.HeadPortrait
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetIsHaveProxy() int32 {
	if m != nil {
		return m.IsHaveProxy
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetIsReservePrice() int32 {
	if m != nil {
		return m.IsReservePrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetLastTime() int64 {
	if m != nil {
		return m.LastTime
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetLimitNumber() int32 {
	if m != nil {
		return m.LimitNumber
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetMktPrice() int32 {
	if m != nil {
		return m.MktPrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetPicturesUrl() string {
	if m != nil {
		return m.PicturesUrl
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetProdId() int32 {
	if m != nil {
		return m.ProdId
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetProdName() string {
	if m != nil {
		return m.ProdName
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetQrUrl() string {
	if m != nil {
		return m.QrUrl
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetRemindTime() int64 {
	if m != nil {
		return m.RemindTime
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetReservePrice() string {
	if m != nil {
		return m.ReservePrice
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetResultStatus() int32 {
	if m != nil {
		return m.ResultStatus
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetRuleId() int32 {
	if m != nil {
		return m.RuleId
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetSerialNum() string {
	if m != nil {
		return m.SerialNum
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetShareUrl() string {
	if m != nil {
		return m.ShareUrl
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetStartAuctionPrice() int32 {
	if m != nil {
		return m.StartAuctionPrice
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetTotalNumber() int32 {
	if m != nil {
		return m.TotalNumber
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetTransactionNumber() int32 {
	if m != nil {
		return m.TransactionNumber
	}
	return 0
}

func (m *GetAuctionProductDetailResponse) GetTransactionPrice() string {
	if m != nil {
		return m.TransactionPrice
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAuctionProductDetailResponse) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAuctionProductListByStatusRequest)(nil), "auction.GetAuctionProductListByStatusRequest")
	proto.RegisterType((*AuctionProductCollection)(nil), "auction.AuctionProductCollection")
	proto.RegisterType((*AuctionProduct)(nil), "auction.AuctionProduct")
	proto.RegisterType((*GetAuctionProductDetailNotFoundError)(nil), "auction.GetAuctionProductDetailNotFoundError")
	proto.RegisterType((*GetAuctionProductDetailRequest)(nil), "auction.GetAuctionProductDetailRequest")
	proto.RegisterType((*GetAuctionProductDetailResponse)(nil), "auction.GetAuctionProductDetailResponse")
}

func init() { proto.RegisterFile("auction.proto", fileDescriptor_622f477c3a3f2896) }

var fileDescriptor_622f477c3a3f2896 = []byte{
	// 911 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0x97, 0x53, 0x12, 0xfb, 0xc6, 0x8e, 0x49, 0xb6, 0x0d, 0xbe, 0x26, 0xa4, 0xb1, 0xdd, 0x94,
	0x5a, 0x42, 0x89, 0x50, 0x91, 0x78, 0xa7, 0xfc, 0x8d, 0x84, 0x2c, 0xe3, 0xb4, 0x2f, 0xbc, 0x9c,
	0xd6, 0xb7, 0xdb, 0x64, 0x95, 0xbb, 0xdb, 0xcb, 0xfe, 0x29, 0xb8, 0x5f, 0x80, 0x27, 0xbe, 0x28,
	0x1f, 0x80, 0x67, 0xb4, 0x33, 0x7b, 0xc1, 0x46, 0x35, 0xf0, 0x8c, 0xf2, 0x38, 0xbf, 0xdf, 0xec,
	0xdc, 0x6f, 0x66, 0x76, 0xc6, 0x6b, 0xd8, 0xe5, 0x3e, 0x77, 0x4a, 0x57, 0xe7, 0xb5, 0xd1, 0x4e,
	0xb3, 0x76, 0x34, 0xc7, 0xbf, 0xb5, 0xe0, 0xf4, 0x3b, 0xe9, 0xbe, 0x24, 0x73, 0x66, 0xb4, 0xf0,
	0xb9, 0xfb, 0x41, 0x59, 0xf7, 0x72, 0x79, 0xe9, 0xb8, 0xf3, 0x76, 0x2e, 0x6f, 0xbd, 0xb4, 0x8e,
	0x3d, 0x83, 0x7e, 0x3c, 0x93, 0x59, 0x24, 0xd2, 0xd6, 0xb0, 0x35, 0xd9, 0x9f, 0x37, 0x81, 0xc9,
	0x9b, 0x8d, 0xa0, 0x97, 0x7b, 0x63, 0x64, 0xe5, 0xb2, 0x9a, 0x5f, 0xc9, 0x74, 0x0b, 0x9d, 0xba,
	0x11, 0x9b, 0xf1, 0x2b, 0xc9, 0x8e, 0x20, 0x09, 0x54, 0x66, 0xd5, 0x3b, 0x99, 0x3e, 0x40, 0xbe,
	0x13, 0x80, 0x4b, 0xf5, 0x4e, 0x8e, 0x2f, 0x20, 0x5d, 0xd7, 0xf2, 0x95, 0x2e, 0x0a, 0x89, 0x00,
	0x3b, 0x83, 0xed, 0x37, 0x4a, 0x16, 0x22, 0x6d, 0x0d, 0x1f, 0x4c, 0xba, 0x2f, 0x06, 0xe7, 0x4d,
	0x4e, 0xeb, 0x27, 0xe6, 0xe4, 0x35, 0xfe, 0x23, 0x81, 0xfe, 0x3a, 0xc3, 0xfa, 0xb0, 0xa5, 0x04,
	0x0a, 0x4f, 0xe6, 0x5b, 0x4a, 0x04, 0x29, 0x5c, 0x88, 0xac, 0x36, 0x2a, 0x6f, 0xa4, 0x76, 0xb8,
	0x10, 0xb3, 0x60, 0xb3, 0x03, 0xd8, 0xe1, 0xc6, 0x65, 0x95, 0x46, 0x91, 0xc9, 0x7c, 0x9b, 0x1b,
	0x37, 0xd5, 0xef, 0x29, 0xc4, 0x07, 0x1b, 0x0a, 0xd1, 0xb8, 0xb9, 0x65, 0x2d, 0xd3, 0x6d, 0x2a,
	0x44, 0xc4, 0x5e, 0x2d, 0x6b, 0xc9, 0x86, 0xd0, 0x5b, 0x28, 0x91, 0xd9, 0x5c, 0x56, 0x32, 0x53,
	0x22, 0xdd, 0x41, 0x17, 0x58, 0x28, 0x71, 0x19, 0xa0, 0x0b, 0xc1, 0x8e, 0x01, 0x16, 0xba, 0x6a,
	0x04, 0xb6, 0x91, 0x4f, 0x02, 0x42, 0x0a, 0x03, 0xed, 0x97, 0x59, 0xe5, 0xcb, 0x85, 0x34, 0x69,
	0x27, 0xd2, 0x7e, 0x39, 0x45, 0x80, 0x9d, 0x42, 0x3f, 0xd0, 0xbe, 0x52, 0x2e, 0x46, 0x48, 0x30,
	0x91, 0xde, 0xc2, 0x2f, 0x5f, 0x57, 0xca, 0x51, 0x90, 0x11, 0x04, 0x5b, 0xfb, 0xc6, 0xa7, 0x4b,
	0x42, 0x09, 0x23, 0x97, 0x23, 0x48, 0x72, 0x5e, 0x47, 0xbe, 0x47, 0x65, 0xca, 0x79, 0x4d, 0xe4,
	0x17, 0x30, 0xc8, 0x8d, 0xfe, 0x59, 0xbc, 0xf1, 0x95, 0x50, 0xd5, 0x55, 0x56, 0xf3, 0xfc, 0x26,
	0xb4, 0x57, 0x89, 0x74, 0x17, 0x3f, 0x77, 0xb0, 0x4a, 0xcf, 0x88, 0xbd, 0x10, 0xec, 0x29, 0xec,
	0xde, 0xdd, 0x14, 0x0c, 0xdc, 0xc7, 0xc0, 0xcd, 0xf5, 0xa1, 0xe0, 0x8f, 0xa1, 0x23, 0x2b, 0x91,
	0x39, 0x55, 0xca, 0xf4, 0xc3, 0x61, 0x6b, 0xc2, 0xe6, 0x6d, 0x59, 0x89, 0x57, 0xaa, 0x94, 0xe1,
	0xfc, 0xb5, 0xe4, 0x22, 0xab, 0xb5, 0x71, 0x86, 0x2b, 0x97, 0xee, 0x51, 0x72, 0x01, 0x9c, 0x45,
	0x8c, 0x8d, 0x61, 0x57, 0xd9, 0xec, 0x9a, 0xbf, 0x95, 0x59, 0x6d, 0xf4, 0x2f, 0xcb, 0x74, 0x9f,
	0xb2, 0x53, 0xf6, 0x7b, 0xfe, 0x56, 0xce, 0x02, 0xc4, 0x26, 0xb0, 0xa7, 0x6c, 0x66, 0xa4, 0x95,
	0x06, 0xdd, 0x82, 0x16, 0x86, 0x6e, 0x7d, 0x65, 0xe7, 0x04, 0xdf, 0xd5, 0xa1, 0xe0, 0xd6, 0x91,
	0x9c, 0x87, 0x28, 0xa7, 0x13, 0x00, 0xd4, 0x33, 0x82, 0x5e, 0xa1, 0x4a, 0xe5, 0x9a, 0x76, 0x3c,
	0xa2, 0x2f, 0x21, 0x16, 0x1b, 0x72, 0x04, 0x49, 0x79, 0xd3, 0xa4, 0x7b, 0x40, 0x75, 0x2c, 0x6f,
	0xfe, 0xea, 0x43, 0xad, 0x72, 0xe7, 0x8d, 0xb4, 0x99, 0x37, 0x45, 0xfa, 0x11, 0xa6, 0xd3, 0x6d,
	0xb0, 0xd7, 0xa6, 0x60, 0x03, 0x68, 0xd7, 0x46, 0x8b, 0x50, 0xda, 0x01, 0x9e, 0xde, 0x09, 0xe6,
	0x05, 0xde, 0x63, 0x24, 0x2a, 0x5e, 0xca, 0x34, 0xc5, 0x83, 0x9d, 0x00, 0x4c, 0x79, 0x89, 0xf7,
	0xf8, 0xd6, 0x60, 0xc8, 0xc7, 0x74, 0x8f, 0x6f, 0x4d, 0x08, 0x76, 0x02, 0x5d, 0x23, 0x4b, 0xd5,
	0x54, 0xf7, 0x10, 0xd3, 0x01, 0x82, 0x9a, 0x02, 0xaf, 0x17, 0xe5, 0x88, 0x0a, 0x6c, 0x56, 0x4b,
	0x42, 0x4e, 0xbe, 0x70, 0xcd, 0x30, 0x7c, 0x4c, 0x5d, 0x24, 0x30, 0xce, 0xc2, 0x00, 0xda, 0xc6,
	0x17, 0x78, 0x25, 0x8e, 0x49, 0x77, 0x30, 0xe9, 0x7e, 0x5b, 0x69, 0x14, 0x2f, 0x42, 0xd1, 0xd2,
	0x27, 0x18, 0x3f, 0x21, 0x64, 0xea, 0xcb, 0x90, 0x96, 0xbd, 0xe6, 0x46, 0xa2, 0xf8, 0x13, 0x4a,
	0x0b, 0x81, 0xa0, 0xff, 0x1c, 0x1e, 0x5a, 0x17, 0x06, 0xb4, 0x19, 0x33, 0x12, 0x39, 0xc4, 0x0f,
	0xec, 0x23, 0x75, 0x37, 0xfd, 0x71, 0x58, 0xc8, 0x1f, 0xd3, 0x1d, 0x61, 0xba, 0x09, 0x22, 0x98,
	0xed, 0x23, 0xd8, 0x76, 0xca, 0x15, 0x32, 0x1d, 0x53, 0x91, 0xd0, 0x08, 0x4d, 0x71, 0xda, 0x91,
	0xbe, 0xd0, 0xd4, 0xa7, 0xd4, 0x54, 0xc4, 0x62, 0x53, 0xcf, 0x80, 0x39, 0xc3, 0x2b, 0xcb, 0x49,
	0x45, 0x74, 0x3c, 0x25, 0x19, 0x2b, 0x4c, 0x74, 0xff, 0x14, 0x56, 0xc1, 0x28, 0xfa, 0x19, 0x7e,
	0x73, 0x6f, 0x85, 0x20, 0xcd, 0x03, 0x68, 0x7b, 0x2b, 0x4d, 0x28, 0xdc, 0x27, 0xe8, 0xb2, 0x13,
	0x4c, 0x6a, 0x38, 0x12, 0xd8, 0xf0, 0xe7, 0x54, 0x99, 0x00, 0x84, 0x86, 0x8f, 0x7f, 0x7c, 0xcf,
	0x4a, 0xff, 0x5a, 0x3a, 0xae, 0x8a, 0xa9, 0x76, 0xdf, 0x6a, 0x5f, 0x89, 0x6f, 0x8c, 0xd1, 0x26,
	0x0c, 0x57, 0x29, 0xad, 0x0d, 0xc3, 0x1a, 0x77, 0x62, 0x3b, 0xda, 0x71, 0x51, 0x6e, 0x35, 0x8b,
	0x72, 0xfc, 0x19, 0x3c, 0xd9, 0x10, 0xb2, 0xf9, 0x7d, 0xf8, 0xdb, 0x6a, 0x1d, 0xff, 0x0a, 0x70,
	0xb2, 0xf1, 0x88, 0xad, 0x75, 0x65, 0xe5, 0xfd, 0x3a, 0xbe, 0x5f, 0xc7, 0xf7, 0xeb, 0xf8, 0x7e,
	0x1d, 0xff, 0xbf, 0xd7, 0xf1, 0x8b, 0xdf, 0x5b, 0xd0, 0x8e, 0xa9, 0xb3, 0x5b, 0x38, 0xfe, 0xc7,
	0xd7, 0x36, 0x3b, 0xbb, 0x7b, 0xd4, 0xfe, 0x97, 0x57, 0xf9, 0xe1, 0x68, 0xc3, 0x1b, 0x78, 0xe5,
	0xd5, 0x5c, 0xc0, 0x60, 0xc3, 0x1e, 0x66, 0xcf, 0x37, 0x7f, 0x6c, 0x6d, 0xb9, 0x1f, 0x4e, 0xfe,
	0xdd, 0x91, 0x56, 0xfa, 0xcb, 0xee, 0x4f, 0x49, 0x74, 0xad, 0x17, 0x8b, 0x1d, 0xfc, 0xb3, 0xf1,
	0xf9, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x05, 0x74, 0xc3, 0xfa, 0x7d, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuctionClient is the client API for Auction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuctionClient interface {
	// 获取拍卖列表
	GetAuctionProductListByStatus(ctx context.Context, in *GetAuctionProductListByStatusRequest, opts ...grpc.CallOption) (*AuctionProductCollection, error)
	// 拍卖详情
	GetAuctionProductDetail(ctx context.Context, in *GetAuctionProductDetailRequest, opts ...grpc.CallOption) (*GetAuctionProductDetailResponse, error)
}

type auctionClient struct {
	cc *grpc.ClientConn
}

func NewAuctionClient(cc *grpc.ClientConn) AuctionClient {
	return &auctionClient{cc}
}

func (c *auctionClient) GetAuctionProductListByStatus(ctx context.Context, in *GetAuctionProductListByStatusRequest, opts ...grpc.CallOption) (*AuctionProductCollection, error) {
	out := new(AuctionProductCollection)
	err := c.cc.Invoke(ctx, "/auction.Auction/GetAuctionProductListByStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auctionClient) GetAuctionProductDetail(ctx context.Context, in *GetAuctionProductDetailRequest, opts ...grpc.CallOption) (*GetAuctionProductDetailResponse, error) {
	out := new(GetAuctionProductDetailResponse)
	err := c.cc.Invoke(ctx, "/auction.Auction/GetAuctionProductDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuctionServer is the server API for Auction service.
type AuctionServer interface {
	// 获取拍卖列表
	GetAuctionProductListByStatus(context.Context, *GetAuctionProductListByStatusRequest) (*AuctionProductCollection, error)
	// 拍卖详情
	GetAuctionProductDetail(context.Context, *GetAuctionProductDetailRequest) (*GetAuctionProductDetailResponse, error)
}

// UnimplementedAuctionServer can be embedded to have forward compatible implementations.
type UnimplementedAuctionServer struct {
}

func (*UnimplementedAuctionServer) GetAuctionProductListByStatus(ctx context.Context, req *GetAuctionProductListByStatusRequest) (*AuctionProductCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuctionProductListByStatus not implemented")
}
func (*UnimplementedAuctionServer) GetAuctionProductDetail(ctx context.Context, req *GetAuctionProductDetailRequest) (*GetAuctionProductDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuctionProductDetail not implemented")
}

func RegisterAuctionServer(s *grpc.Server, srv AuctionServer) {
	s.RegisterService(&_Auction_serviceDesc, srv)
}

func _Auction_GetAuctionProductListByStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuctionProductListByStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctionServer).GetAuctionProductListByStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auction.Auction/GetAuctionProductListByStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctionServer).GetAuctionProductListByStatus(ctx, req.(*GetAuctionProductListByStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auction_GetAuctionProductDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuctionProductDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctionServer).GetAuctionProductDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auction.Auction/GetAuctionProductDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctionServer).GetAuctionProductDetail(ctx, req.(*GetAuctionProductDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auction.Auction",
	HandlerType: (*AuctionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAuctionProductListByStatus",
			Handler:    _Auction_GetAuctionProductListByStatus_Handler,
		},
		{
			MethodName: "GetAuctionProductDetail",
			Handler:    _Auction_GetAuctionProductDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auction.proto",
}
